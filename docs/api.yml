openapi: 3.0.4
info:
  title: TODOアプリケーション
  version: 0.0.1
servers:
  - url: http://localhost:8080/api
paths:
  /v1/login:
    post:
      operationId: login
      summary: ログイン
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginRequest"
      responses:
        200:
          description: ログイン成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                required:
                  - token
        401:
          description: 未認証
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Unauthorized
                required:
                  - error
        403:
          $ref: "#/components/responses/AuthorizationException"
        422:
          $ref: "#/components/responses/ValidationException"
  /v1/logout:
    post:
      operationId: auth.logout
      summary: ログアウト
      tags:
        - Auth
      responses:
        200:
          description: 成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Successfully logged out
                required:
                  - message
  /v1/register:
    post:
      operationId: auth.register
      summary: ユーザー登録
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  maxLength: 255
                email:
                  type: string
                  format: email
                  maxLength: 255
                password:
                  type: string
                  minLength: 8
                password_confirmation:
                  type: string
                  minLength: 8
              required:
                - name
                - email
                - password
                - password_confirmation
      responses:
        201:
          description: 成功
          content:
            application/json:
              schema:
                type: string
        422:
          $ref: "#/components/responses/ValidationException"
  /v1/refresh:
    post:
      operationId: auth.refresh
      summary: トークンのリフレッシュ
      tags:
        - Auth
      responses:
        200:
          description: 成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                required:
                  - token
        400:
          description: ""
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Token not provided
                required:
                  - error
        500:
          description: ""
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Could not refresh token
                  detail:
                    type: string
                required:
                  - error
                  - detail
  /v1/tasks:
    get:
      operationId: task.index
      summary: タスク一覧取得
      tags:
        - Task
      parameters:
        - name: is_public
          in: query
          schema:
            type: boolean
            nullable: true
        - name: is_done
          in: query
          schema:
            type: boolean
            nullable: true
        - name: expired_before
          in: query
          schema:
            type: string
            nullable: true
            format: date-time
        - name: expired_after
          in: query
          schema:
            type: string
            nullable: true
            format: date-time
        - name: created_user_id
          in: query
          schema:
            type: integer
            nullable: true
        - name: assigned_user_id
          in: query
          schema:
            type: integer
            nullable: true
        - name: sort_by
          in: query
          schema:
            type: string
            nullable: true
            enum:
              - title
              - expired_at
              - created_at
              - updated_at
        - name: sort_order
          in: query
          schema:
            type: string
            nullable: true
            enum:
              - asc
              - desc
        - name: created_user_ids
          in: query
          schema:
            type: array
            nullable: true
            items:
              type: integer
        - name: assigned_user_ids
          in: query
          schema:
            type: array
            nullable: true
            items:
              type: integer
      responses:
        200:
          description: 成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  tasks:
                    type: array
                    items:
                      $ref: "#/components/schemas/TaskResource"
                required:
                  - tasks
        401:
          $ref: "#/components/responses/AuthenticationException"
        403:
          $ref: "#/components/responses/AuthorizationException"
        422:
          $ref: "#/components/responses/ValidationException"
    post:
      operationId: tasks.store
      summary: 新規タスク作成
      tags:
        - Task
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  maxLength: 255
                is_public:
                  type: boolean
                description:
                  type: string
                  nullable: true
                expired_at:
                  type: string
                  nullable: true
                  format: date-time
                assigned_user_ids:
                  type: array
                  nullable: true
                  items:
                    type: integer
              required:
                - title
                - is_public
      responses:
        200:
          description: "`TaskResource`"
          content:
            application/json:
              schema:
                type: object
                properties:
                  task:
                    $ref: "#/components/schemas/TaskResource"
                required:
                  - task
        401:
          $ref: "#/components/responses/AuthenticationException"
        422:
          $ref: "#/components/responses/ValidationException"
  /v1/tasks/{task}:
    get:
      operationId: tasks.show
      summary: タスク単体取得
      tags:
        - Task
      parameters:
        - name: task
          in: path
          required: true
          description: The task ID
          schema:
            type: integer
      responses:
        200:
          description: "`TaskResource`"
          content:
            application/json:
              schema:
                type: object
                properties:
                  task:
                    $ref: "#/components/schemas/TaskResource"
                required:
                  - task
        401:
          $ref: "#/components/responses/AuthenticationException"
        404:
          $ref: "#/components/responses/ModelNotFoundException"
    put:
      operationId: tasks.update
      summary: タスク更新
      tags:
        - Task
      parameters:
        - name: task
          in: path
          required: true
          description: The task ID
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  maxLength: 255
                is_public:
                  type: boolean
                expired_at:
                  type: string
                  nullable: true
                  format: date-time
                description:
                  type: string
                  nullable: true
                is_done:
                  type: boolean
                assigned_user_ids:
                  type: array
                  nullable: true
                  items:
                    type: integer
      responses:
        200:
          description: "`TaskResource`"
          content:
            application/json:
              schema:
                type: object
                properties:
                  task:
                    $ref: "#/components/schemas/TaskResource"
                required:
                  - task
        401:
          $ref: "#/components/responses/AuthenticationException"
        404:
          $ref: "#/components/responses/ModelNotFoundException"
        422:
          $ref: "#/components/responses/ValidationException"
    delete:
      operationId: tasks.destroy
      summary: タスク削除
      tags:
        - Task
      parameters:
        - name: task
          in: path
          required: true
          description: The task ID
          schema:
            type: integer
      responses:
        204:
          description: No content
        401:
          $ref: "#/components/responses/AuthenticationException"
        404:
          $ref: "#/components/responses/ModelNotFoundException"
  /v1/tasks/{task}/actions:
    get:
      operationId: actions.index
      summary: タスクに対応するアクション一覧
      tags:
        - TaskAction
      parameters:
        - name: task
          in: path
          required: true
          description: The task ID
          schema:
            type: integer
      responses:
        200:
          description: 成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  actions:
                    type: array
                    items:
                      $ref: "#/components/schemas/TaskActionResource"
                required:
                  - actions
        401:
          $ref: "#/components/responses/AuthenticationException"
        404:
          $ref: "#/components/responses/ModelNotFoundException"
    post:
      operationId: actions.store
      summary: タスクに対応するアクション作成
      tags:
        - TaskAction
      parameters:
        - name: task
          in: path
          required: true
          description: The task ID
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StoreTaskActionRequest"
      responses:
        200:
          description: "`TaskActionResource`"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TaskActionResource"
        401:
          $ref: "#/components/responses/AuthenticationException"
        403:
          $ref: "#/components/responses/AuthorizationException"
        404:
          $ref: "#/components/responses/ModelNotFoundException"
        422:
          $ref: "#/components/responses/ValidationException"
  /v1/tasks/{task}/actions/{action}:
    put:
      operationId: actions.update
      summary: タスクに対応するアクション更新
      tags:
        - TaskAction
      parameters:
        - name: task
          in: path
          required: true
          description: The task ID
          schema:
            type: integer
        - name: action
          in: path
          required: true
          description: The action ID
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateTaskActionRequest"
      responses:
        200:
          description: "`TaskActionResource`"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TaskActionResource"
        401:
          $ref: "#/components/responses/AuthenticationException"
        403:
          $ref: "#/components/responses/AuthorizationException"
        404:
          $ref: "#/components/responses/ModelNotFoundException"
        422:
          $ref: "#/components/responses/ValidationException"
    delete:
      operationId: actions.destroy
      summary: タスクに対応するアクション削除
      tags:
        - TaskAction
      parameters:
        - name: task
          in: path
          required: true
          description: The task ID
          schema:
            type: integer
        - name: action
          in: path
          required: true
          description: The action ID
          schema:
            type: integer
      responses:
        204:
          description: No content
        401:
          $ref: "#/components/responses/AuthenticationException"
        404:
          $ref: "#/components/responses/ModelNotFoundException"
  /v1/users/me:
    get:
      operationId: user.me
      summary: 自身のユーザ取得
      tags:
        - User
      responses:
        200:
          description: "`UserResource`"
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: "#/components/schemas/UserResource"
                required:
                  - user
        401:
          $ref: "#/components/responses/AuthenticationException"
  /v1/users:
    get:
      operationId: user.index
      summary: ユーザ一覧取得
      tags:
        - User
      responses:
        200:
          description: 成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  users:
                    type: array
                    items:
                      $ref: "#/components/schemas/UserResource"
                required:
                  - users
        401:
          $ref: "#/components/responses/AuthenticationException"
  /v1/users/{user}:
    put:
      operationId: users.update
      tags:
        - User
      parameters:
        - name: user
          in: path
          required: true
          description: The user ID
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  maxLength: 255
                email:
                  type: string
                  format: email
                  maxLength: 255
                password:
                  type: string
                  minLength: 8
                password_confirmation:
                  type: string
                  minLength: 8
      responses:
        200:
          description: "`UserResource`"
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: "#/components/schemas/UserResource"
                required:
                  - user
        401:
          $ref: "#/components/responses/AuthenticationException"
        404:
          $ref: "#/components/responses/ModelNotFoundException"
        422:
          $ref: "#/components/responses/ValidationException"
    delete:
      operationId: users.destroy
      tags:
        - User
      parameters:
        - name: user
          in: path
          required: true
          description: The user ID
          schema:
            type: integer
      responses:
        204:
          description: No content
        401:
          $ref: "#/components/responses/AuthenticationException"
        404:
          $ref: "#/components/responses/ModelNotFoundException"
  /v1/users/me/tasks:
    get:
      operationId: userMeTask.index
      summary: 自身のタスク一覧取得
      tags:
        - UserMeTask
      parameters:
        - name: is_public
          in: query
          schema:
            type: boolean
            nullable: true
        - name: is_done
          in: query
          schema:
            type: boolean
            nullable: true
        - name: expired_before
          in: query
          schema:
            type: string
            nullable: true
            format: date-time
        - name: expired_after
          in: query
          schema:
            type: string
            nullable: true
            format: date-time
        - name: created_user_id
          in: query
          schema:
            type: integer
            nullable: true
        - name: assigned_user_id
          in: query
          schema:
            type: integer
            nullable: true
        - name: sort_by
          in: query
          schema:
            type: string
            nullable: true
            enum:
              - title
              - expired_at
              - created_at
              - updated_at
        - name: sort_order
          in: query
          schema:
            type: string
            nullable: true
            enum:
              - asc
              - desc
        - name: created_user_ids
          in: query
          schema:
            type: array
            nullable: true
            items:
              type: integer
        - name: assigned_user_ids
          in: query
          schema:
            type: array
            nullable: true
            items:
              type: integer
      responses:
        200:
          description: 成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  tasks:
                    type: array
                    items:
                      $ref: "#/components/schemas/TaskResource"
                required:
                  - tasks
        401:
          $ref: "#/components/responses/AuthenticationException"
        403:
          $ref: "#/components/responses/AuthorizationException"
        422:
          $ref: "#/components/responses/ValidationException"
components:
  schemas:
    LoginRequest:
      type: object
      properties:
        email:
          type: string
          format: email
        password:
          type: string
      required:
        - email
        - password
      title: LoginRequest
    StoreTaskActionRequest:
      type: object
      properties:
        name:
          type: string
        is_done:
          type: boolean
      required:
        - name
      title: StoreTaskActionRequest
    TaskActionResource:
      type: object
      properties:
        id:
          type: integer
        task_id:
          type: integer
        name:
          type: string
        is_done:
          type: boolean
        created_at:
          type: string
          nullable: true
          format: date-time
        updated_at:
          type: string
          nullable: true
          format: date-time
        deleted_at:
          type: string
          nullable: true
          format: date-time
      required:
        - id
        - task_id
        - name
        - is_done
        - created_at
        - updated_at
        - deleted_at
      title: TaskActionResource
    TaskResource:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        description:
          type: string
          nullable: true
        is_public:
          type: boolean
        is_done:
          type: boolean
        expired_at:
          type: string
          nullable: true
          format: date-time
        created_user_id:
          type: integer
        created_at:
          type: string
          nullable: true
          format: date-time
        updated_at:
          type: string
          nullable: true
          format: date-time
        created_user:
          $ref: "#/components/schemas/UserResource"
        assigned_users:
          type: array
          items:
            $ref: "#/components/schemas/UserResource"
      required:
        - id
        - title
        - description
        - is_public
        - is_done
        - expired_at
        - created_user_id
        - created_at
        - updated_at
        - created_user
        - assigned_users
      title: TaskResource
    UpdateTaskActionRequest:
      type: object
      properties:
        name:
          type: string
        is_done:
          type: boolean
      title: UpdateTaskActionRequest
    UserResource:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        email:
          type: string
        email_verified_at:
          type: string
          nullable: true
          format: date-time
        created_at:
          type: string
          nullable: true
          format: date-time
        updated_at:
          type: string
          nullable: true
          format: date-time
      required:
        - id
        - name
        - email
        - email_verified_at
        - created_at
        - updated_at
      title: UserResource
  responses:
    ValidationException:
      description: Validation error
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                description: Errors overview.
              errors:
                type: object
                description: A detailed description of each field that failed validation.
                additionalProperties:
                  type: array
                  items:
                    type: string
            required:
              - message
              - errors
    AuthorizationException:
      description: Authorization error
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                description: Error overview.
            required:
              - message
    AuthenticationException:
      description: Unauthenticated
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                description: Error overview.
            required:
              - message
    ModelNotFoundException:
      description: Not found
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                description: Error overview.
            required:
              - message
